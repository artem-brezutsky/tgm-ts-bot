import { Context } from 'telegraf';
import { downloadInstagramVideo } from 'src/services/instagram.service';

export async function handleMessage(ctx: Context) {
    if (!ctx.message || typeof ctx.message !== 'object') {
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ 
    if ('text' in ctx.message) {
        const messageText = ctx.message.text;

        // üü¢ –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –≥—Ä—É–ø–ø—ã –∏–ª–∏ –Ω–µ—Ç
        const isGroup = ctx.chat?.type.includes('group');
        const isPrivate = ctx.chat?.type === 'private';

        // üü¢ –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        const senderName = ctx.message.from.username
            ? `@${ctx.message.from.username}`
            : ctx.message.from.first_name;

        if (!isGroup || isPrivate) {
            return;
        }

        // üîπ –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è TikTok –∏ Instagram
        const tiktokRegex = /https?:\/\/(?:www\.|vm\.)?tiktok\.com\/(@[\w.-]+\/video\/\d+|[\w@?=./-]+)/i;
        const instagramRegex = /https?:\/\/(?:www\.)?instagram\.com\/(stories|reel)\/[\w@?=./-]+/i;

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–æ–∫ —Å TikTok
        if (tiktokRegex.test(messageText)) {
            // –ü–æ–∫–∞ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¢–∏–∫ –¢–æ–∫
            return;
            // ctx.reply('‚úÖ –≠—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ TikTok!');
        }
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–æ–∫ —Å Instagram
        else if (instagramRegex.test(messageText)) {
            try {
                // üîπ –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å—Å—ã–ª–∫–æ–π
                // await ctx.deleteMessage(ctx.message.message_id);
                const replyMessageId = ctx.message.message_id;
                const chatId = ctx.chat?.id;

                if (!chatId) return;

                // üîπ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ
                const loadingMessage = await ctx.reply(
                    '‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –≤–∏–¥–µ–æ, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...',
                    {
                        reply_parameters: {
                            message_id: replyMessageId
                        }
                    }
                );

                // üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ
                const videoData = await downloadInstagramVideo(messageText);

                if (videoData) {
                    // üîπ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ —Å –ø–æ–¥–ø–∏—Å—å—é
                    await ctx.telegram.editMessageMedia(
                        ctx.chat.id,
                        loadingMessage.message_id,
                        undefined,
                        {
                            type: "video",
                            media: { source: videoData.buffer, filename: videoData.filename },
                            caption: `üé• –í–∏–¥–µ–æ –æ—Ç ${senderName}`,
                            width: 720,
                            height: 1152,
                            
                        }
                    );
                } else {
                    // üîπ –ï—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å, –º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    await ctx.telegram.editMessageText(
                        ctx.chat.id,
                        loadingMessage.message_id,
                        undefined,
                        '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Å—ã–ª–∫—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'
                    );
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Å—ã–ª–∫–∏:', error);
                await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.');
            }
        }
    }
}   